When to use dynamic programming ?
-> The problem asks for the maximum/longest, minimal/shortest value/cost/profit you can get from doing operations on a sequence.
-> You've tried greedy, but it sometimes gives the wrong solution. This often means you have to consider sub-problems for an optimal solution.
-> The problem asks how many ways there are to do something. This can often be solved by DFS + memoization, i.e., top-down dynamic programming.
-> Partition a string/array into sub-sequences so that a specific condition is met. This is often well-suited for top-down dynamic programming.
-> The problem is about the optimal way to play a game.